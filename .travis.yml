---
before_install:
  - "sudo docker pull ${distribution}:${version}"
  - "sudo docker build --rm=true --file=tests/Dockerfile.${distribution}-${version} --tag=${distribution}-${version}:ansible tests"
env:
  -
    distribution: centos
    init: /sbin/init
    run_opts: ""
    version: 6
  -
    distribution: centos
    init: /usr/lib/systemd/systemd
    run_opts: "--privileged --volume=/sys/fs/cgroup:/sys/fs/cgroup:ro"
    version: 7
  -
    distribution: fedora
    init: /usr/lib/systemd/systemd
    run_opts: "--privileged --volume=/sys/fs/cgroup:/sys/fs/cgroup:ro"
    version: 24
  -
    distribution: ubuntu
    init: /sbin/init
    run_opts: ""
    version: 16.04
  -
    distribution: ubuntu
    init: /sbin/init
    run_opts: ""
    version: 14.04
matrix:
  include:
    -
      env:
        - "AVI_CONTROLLER=\"10.10.28.132\" - AVI_USERNAME=\"admin\" - AVI_PASSWORD=\"avi123$%\" - API_VERSION=\"18.1.3\""
      install:
        - "pip install vcrpy pytest ansible requests"
        - "export PYTHONPATH=$PWD"
      language: python
      python: "2.7"
      script:
        - "cd $PYTHONPATH/tests/module_tests/"
        - "pytest ./ansible_tests.py -m travis -vvvv --color=yes"
notifications:
  webhooks: "https://galaxy.ansible.com/api/v1/notifications/"
script:
  - container_id=$(mktemp)
  - "sudo docker run --privileged --detach --volume=\"${PWD}\":/etc/ansible/roles/role_under_test:ro ${run_opts} ${distribution}-${version}:ansible \"${init}\" > \"${container_id}\""
  - "sudo docker exec --tty \"$(cat ${container_id})\" env TERM=xterm ansible-playbook /etc/ansible/roles/role_under_test/tests/test.yml --syntax-check"
  - "sudo docker exec --tty \"$(cat ${container_id})\" env TERM=xterm ansible-playbook /etc/ansible/roles/role_under_test/tests/test.yml"
  - "sudo docker exec \"$(cat ${container_id})\" ansible-playbook /etc/ansible/roles/role_under_test/tests/test.yml | grep -q 'changed=0.*failed=0' && (echo 'Idempotence test: pass' && exit 0) || (echo 'Idempotence test: fail' && exit 1)\n"
  - "sudo docker stop \"$(cat ${container_id})\""
services:
  - docker
sudo: required
